name: CD

on:
  release:
    types: [created]
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
          - arch: x86
          - arch: armhf
          - arch: arm64
    name: Build on ${{ matrix.arch }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Setup Docker
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - name: Setup build environment in Docker
        run: |
          docker run --workdir /github/workspace --rm --entrypoint "./01_setup_build_env.sh" -v "$(pwd)":"/github/workspace" multiarch/alpine:${{ matrix.arch }}-edge

      - name: Build static libnl3 in Docker
        run: |
          docker run --workdir /github/workspace --rm --entrypoint "./02_build_static_libnl3.sh" -v "$(pwd)":"/github/workspace" multiarch/alpine:${{ matrix.arch }}-edge

      - name: Build in Docker
        run: |
          docker run --workdir /github/workspace --rm --entrypoint "./03_build_static_alpine.sh" -v "$(pwd)":"/github/workspace" multiarch/alpine:${{ matrix.arch }}-edge

      - name: Upload Binary
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v3
        with:
          name: dpitunnel-cli-${{ matrix.arch }}
          path: build/DPITunnel-cli-exec

      - name: Upload Binary to Release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@2.7.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/DPITunnel-cli-exec
          asset_name: dpitunnel-cli-${{ matrix.arch }}
          tag: ${{ github.ref }}
